{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Proyecto Portfolio/src/components/Body/Videos.js\";\nimport { VideosBody } from '../Helper/VideosBody';\nimport HoverVideoPlayer from 'react-hover-video-player';\nimport styles from './Videos.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Videos = () => {\n  console.log(VideosBody);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.videoCont,\n    children: /*#__PURE__*/_jsxDEV(HoverVideoPlayer, {\n      videoSrc: VideosBody[0].src,\n      pausedOverlay: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"thumbnail-image.jpg\",\n        alt: \"\",\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this),\n      loadingOverlay: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Videos;\nexport default Videos; // {VideosBody.map(vids => {\n//     return (<video className={styles.vid} key={vids.id} alt={vids.name} >\n//             <source src={vids.src} type={vids.type}/>\n//         </video>)\n// })}\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/Users/guidogreco/Proyecto Portfolio/src/components/Body/Videos.js"],"names":["VideosBody","HoverVideoPlayer","styles","Videos","console","log","videoCont","src","width","height","objectFit"],"mappings":";AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACI,SAAvB;AAAA,2BACI,QAAC,gBAAD;AACK,MAAA,QAAQ,EAAEN,UAAU,CAAC,CAAD,CAAV,CAAcO,GAD7B;AAEK,MAAA,aAAa,eACX;AACE,QAAA,GAAG,EAAC,qBADN;AAEE,QAAA,GAAG,EAAC,EAFN;AAGE,QAAA,KAAK,EAAE;AAELC,UAAAA,KAAK,EAAE,MAFF;AAGLC,UAAAA,MAAM,EAAE,MAHH;AAILC,UAAAA,SAAS,EAAE;AAJN;AAHT;AAAA;AAAA;AAAA;AAAA,cAHP;AAcK,MAAA,cAAc,eACZ;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAfP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA3BD;;KAAMP,M;AA6BN,eAAeA,MAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { VideosBody } from '../Helper/VideosBody';\nimport HoverVideoPlayer from 'react-hover-video-player';\nimport styles from './Videos.module.css'\n\nconst Videos = () => {\n    console.log(VideosBody)\n    return (\n        <div className={styles.videoCont}>\n            <HoverVideoPlayer \n                 videoSrc={VideosBody[0].src}\n                 pausedOverlay={\n                   <img\n                     src=\"thumbnail-image.jpg\"\n                     alt=\"\"\n                     style={{\n                       \n                       width: \"100%\",\n                       height: \"100%\",\n                       objectFit: \"cover\",\n                     }}\n                   />\n                 }\n                 loadingOverlay={\n                   <div className=\"loading-overlay\">\n                     <div className=\"loading-spinner\" />\n                   </div>\n                 }\n\n                />\n        </div>\n    )\n};\n\nexport default Videos;\n\n// {VideosBody.map(vids => {\n//     return (<video className={styles.vid} key={vids.id} alt={vids.name} >\n//             <source src={vids.src} type={vids.type}/>\n//         </video>)\n// })}"]},"metadata":{},"sourceType":"module"}